name: 'Database'

on:
  pull_request:
    branches:
      - main
    paths:
      - 'Database/**'
  workflow_dispatch:
    inputs:
      apply:
        description: 'Apply the changes'
        required: false
        type: string
        default: 'false'

env:
  TERRAGRUNT_WORKING_DIR: Database/iac

permissions:
  contents: read

jobs:
  terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      # with:
      #   cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Setup Terragrunt
      run: |
        version="v0"
        url=$(curl -s https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest \
          | grep "browser_download_url.*terragrunt_linux_amd64" \
          | cut -d '"' -f 4)
        if [[ $url != "https://github.com/gruntwork-io/terragrunt/releases/download/$version"*"/terragrunt_linux_amd64" ]]; then
          echo "Error: URL does not match the expected pattern for Terragrunt $version"
          exit 1
        else
          curl -LO $url
        fi
        mv terragrunt_linux_amd64 terragrunt
        chmod u+x terragrunt
        sudo mv terragrunt /usr/local/bin/terragrunt

    - name: Terragrunt Init
      run: terragrunt init

    - name: Terragrunt Format
      run: terragrunt hclfmt --terragrunt-check

    - name: Terragrunt Plan
      run: terragrunt plan -input=false

    - name: Terragrunt Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.event.inputs.apply == 'true'
      run: terragrunt apply -auto-approve -input=false
